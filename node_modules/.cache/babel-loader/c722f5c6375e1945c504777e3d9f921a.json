{"ast":null,"code":"import _classCallCheck from \"/Users/amitkamboj/Desktop/canvas/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/amitkamboj/Desktop/canvas/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/amitkamboj/Desktop/canvas/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/amitkamboj/Desktop/canvas/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/amitkamboj/Desktop/canvas/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/amitkamboj/Desktop/canvas/src/Previous_submissions.js\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport cookie from 'react-cookies';\nimport { Redirect } from 'react-router';\nimport { Navbar } from './Navbar';\nimport { Link } from 'react-router-dom';\nimport { FaUser } from 'react-icons/fa';\nimport './index.css';\nimport { Sidenavbar } from './Sidenavbar';\nimport axios from 'axios';\nexport var Previous_submissions =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Previous_submissions, _Component);\n\n  function Previous_submissions() {\n    var _this;\n\n    _classCallCheck(this, Previous_submissions);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Previous_submissions).call(this));\n    _this.state = {\n      submissions: []\n    };\n    return _this;\n  }\n\n  _createClass(Previous_submissions, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var _this2 = this;\n\n      if (this.state.authFlag == true || this.props.authFlag == true) {\n        axios.get(\"http://localhost:3001/previous_submissions/\".concat(this.props.assignment_id), {\n          headers: {\n            'Authorization': localStorage.getItem('token')\n          }\n        }).then(function (response) {\n          //update the state with the response data\n          _this2.setState({\n            submissions: response.data\n          });\n        });\n      }\n    } //get the books data from backend  \n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      axios.get(\"http://localhost:3001/previous_submissions/\".concat(this.props.assignment_id), {\n        headers: {\n          'Authorization': localStorage.getItem('token')\n        }\n      }).then(function (response) {\n        //update the state with the response data\n        _this3.setState({\n          submissions: _this3.state.submissions.concat(response.data)\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      //iterate over courses to create a table row\n      var details = this.state.submissions.map(function (item) {\n        if (item.graded == \"no\") {\n          var button_type = React.createElement(\"button\", {\n            class: \"btn btn-warning \",\n            disabled: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          }, \"Not graded\");\n        } else {\n          var button_type = React.createElement(\"button\", {\n            class: \"btn btn-success \",\n            disabled: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63\n            },\n            __self: this\n          }, \"Graded: \", item.graded);\n        }\n\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, item.file_name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, item.submitted_by), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          class: \"btn btn-primary white\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"http://localhost:3000/web/viewer.html?file=\" + item.file_name,\n          target: \"blank\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, \"view file\"))), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, button_type));\n      });\n      return React.createElement(\"table\", {\n        class: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"File name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Submitted By\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, details));\n    }\n  }]);\n\n  return Previous_submissions;\n}(Component);","map":{"version":3,"sources":["/Users/amitkamboj/Desktop/canvas/src/Previous_submissions.js"],"names":["React","Component","cookie","Redirect","Navbar","Link","FaUser","Sidenavbar","axios","Previous_submissions","state","submissions","authFlag","props","get","assignment_id","headers","localStorage","getItem","then","response","setState","data","concat","details","map","item","graded","button_type","file_name","submitted_by"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport cookie from 'react-cookies';\r\nimport {Redirect} from 'react-router';\r\nimport {Navbar} from './Navbar';\r\nimport {Link} from 'react-router-dom';\r\nimport { FaUser } from 'react-icons/fa';\r\nimport './index.css';\r\nimport {Sidenavbar} from './Sidenavbar';\r\nimport axios from 'axios';\r\n\r\n\r\nexport class Previous_submissions extends Component{\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {  \r\n            submissions : [],\r\n            \r\n        }\r\n    }  \r\n\r\n    componentDidUpdate() {\r\n       \r\n        if (this.state.authFlag==true || this.props.authFlag==true ) {\r\n            axios.get(`http://localhost:3001/previous_submissions/${this.props.assignment_id}`,{headers: {'Authorization': localStorage.getItem('token')}})\r\n        .then((response) => {\r\n        //update the state with the response data\r\n        this.setState({\r\n            submissions :response.data ,\r\n           \r\n           \r\n        });\r\n    });\r\n\r\n        }\r\n\r\n    }\r\n    \r\n    //get the books data from backend  \r\n    componentDidMount(){\r\n       \r\n        axios.get(`http://localhost:3001/previous_submissions/${this.props.assignment_id}`,{headers: {'Authorization': localStorage.getItem('token')}})\r\n                .then((response) => {\r\n                //update the state with the response data\r\n                this.setState({\r\n                    submissions : this.state.submissions.concat(response.data) \r\n                });\r\n            });\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n\r\n\r\n               //iterate over courses to create a table row\r\n               let details = this.state.submissions.map(item => {\r\n                   if(item.graded==\"no\")\r\n                   {\r\n                    var button_type=<button class=\"btn btn-warning \" disabled >Not graded</button>;\r\n                   }else{\r\n                       var button_type=<button class=\"btn btn-success \" disabled >Graded: {item.graded}</button>;\r\n  \r\n\r\n                   }\r\n                return(\r\n                    <tr>\r\n                        <td>{item.file_name}</td>\r\n                        <td>{item.submitted_by}</td>\r\n                        <td><button class=\"btn btn-primary white\"><a href={\"http://localhost:3000/web/viewer.html?file=\"+ item.file_name} target=\"blank\">view file</a></button></td>\r\n                        <td>{button_type}</td>\r\n             </tr>\r\n                )\r\n            })\r\n     \r\n        return(\r\n            \r\n\r\n     \r\n<table class=\"table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>File name</th>\r\n                                    <th>Submitted By</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {/*Display the Tbale row based on data recieved*/}\r\n                                {details}\r\n                            </tbody>\r\n                        </table>\r\n\r\n\r\n\r\n   \r\n        )\r\n\r\n}\r\n}"]},"metadata":{},"sourceType":"module"}