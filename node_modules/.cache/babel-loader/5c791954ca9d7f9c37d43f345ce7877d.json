{"ast":null,"code":"import _classCallCheck from \"/Users/amitkamboj/Desktop/canvas/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/amitkamboj/Desktop/canvas/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/amitkamboj/Desktop/canvas/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/amitkamboj/Desktop/canvas/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/amitkamboj/Desktop/canvas/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/amitkamboj/Desktop/canvas/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/amitkamboj/Desktop/canvas/src/Enrolled.js\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport cookie from 'react-cookies';\nimport { Redirect } from 'react-router';\nimport { Navbar } from './Navbar';\nimport { Link } from 'react-router-dom';\nimport { FaUser } from 'react-icons/fa';\nimport './index.css';\nimport { Sidenavbar } from './Sidenavbar';\nimport axios from 'axios';\nexport var Enrolled =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Enrolled, _Component);\n\n  function Enrolled(props) {\n    var _this;\n\n    _classCallCheck(this, Enrolled);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Enrolled).call(this, props));\n\n    _this.remove = function (e) {\n      var course_id = _this.props.match.params.course_id;\n      var id = {\n        course_id: course_id\n      };\n      var value = e.target.value;\n      var data = {\n        username: value,\n        course_id: id.course_id\n      };\n      axios.post('http://localhost:3001/remove', data).then(function (response) {\n        if (response.status === 200) {\n          _this.setState({\n            authFlag: true\n          });\n        } else {\n          _this.setState({\n            authFlag: false\n          });\n        }\n      });\n    };\n\n    _this.state = {\n      enrolled: [],\n      authFlag: false\n    };\n    _this.remove = _this.remove.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Enrolled, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var _this2 = this;\n\n      var course_id = this.props.match.params.course_id;\n      var id = {\n        course_id: course_id\n      };\n\n      if (this.state.authFlag == true) {\n        axios.get(\"http://localhost:3001/enrolled/\".concat(id.course_id)).then(function (response) {\n          //update the state with the response data\n          _this2.setState({\n            enrolled: response.data,\n            authFlag: false\n          });\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      var course_id = this.props.match.params.course_id;\n      var id = {\n        course_id: course_id\n      };\n      axios.get(\"http://localhost:3001/enrolled/\".concat(id.course_id)).then(function (response) {\n        //update the state with the response data\n        _this3.setState({\n          enrolled: _this3.state.enrolled.concat(response.data)\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      //iterate over books to create a table row\n      var details = this.state.enrolled.map(function (item) {\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, item.course_id), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, item.username), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          class: \"btn btn-danger\",\n          onClick: _this4.remove,\n          value: item.username,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, \"Remove\")));\n      });\n      var course_id = this.props.match.params.course_id; //redirect based on successful login\n\n      var redirectVar = null;\n      var no_access = null;\n\n      if (!cookie.load('username')) {\n        redirectVar = React.createElement(Redirect, {\n          to: \"/login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        });\n      }\n\n      if (cookie.load('user_type') == \"student\") {\n        no_access = React.createElement(Redirect, {\n          to: \"/dashboard\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, redirectVar, no_access, React.createElement(Navbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"side_navigation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"col-md-2 col-sm-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(Sidenavbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        class: \"col-md-10 col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"List of students enrolled for \", course_id), React.createElement(\"table\", {\n        class: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Course ID\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Student Name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Action\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, details))))));\n    }\n  }]);\n\n  return Enrolled;\n}(Component);","map":{"version":3,"sources":["/Users/amitkamboj/Desktop/canvas/src/Enrolled.js"],"names":["React","Component","cookie","Redirect","Navbar","Link","FaUser","Sidenavbar","axios","Enrolled","props","remove","e","course_id","match","params","id","value","target","data","username","post","then","response","status","setState","authFlag","state","enrolled","bind","get","concat","details","map","item","redirectVar","no_access","load"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport cookie from 'react-cookies';\r\nimport {Redirect} from 'react-router';\r\nimport {Navbar} from './Navbar';\r\nimport {Link} from 'react-router-dom';\r\nimport { FaUser } from 'react-icons/fa';\r\nimport './index.css';\r\nimport {Sidenavbar} from './Sidenavbar';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nexport class Enrolled extends Component{\r\n\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {  \r\n            enrolled : [],\r\n            authFlag : false\r\n        }\r\n   this.remove=this.remove.bind(this);\r\n    }  \r\n\r\n\r\n\r\n    componentDidUpdate() {\r\n        const {course_id} = this.props.match.params\r\n        let id= {course_id};\r\n        if (this.state.authFlag==true) {\r\n        axios.get(`http://localhost:3001/enrolled/${id.course_id}`)\r\n        .then((response) => {\r\n        //update the state with the response data\r\n        this.setState({\r\n            enrolled :response.data ,\r\n            authFlag:false\r\n           \r\n        });\r\n    });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        const {course_id} = this.props.match.params\r\n       let id= {course_id};\r\n\r\n        axios.get(`http://localhost:3001/enrolled/${id.course_id}`)\r\n                .then((response) => {\r\n                //update the state with the response data\r\n                this.setState({\r\n                    enrolled : this.state.enrolled.concat(response.data) \r\n                   \r\n                });\r\n            });\r\n    }\r\n\r\n    remove=(e)=>{\r\n\r\n\r\n                                const {course_id} = this.props.match.params\r\n                            let id= {course_id};\r\n                                const value = e.target.value;\r\n                               \r\n                        const data={\r\n                            username:value,\r\n                            course_id:id.course_id\r\n                        }\r\n\r\n                        axios.post('http://localhost:3001/remove',data)\r\n                        .then(response => {\r\n                            if(response.status === 200){\r\n                                this.setState({\r\n                                    authFlag : true\r\n                                })\r\n                            }else{\r\n                                this.setState({\r\n                                    authFlag : false\r\n                                })\r\n                            }\r\n                        \r\n\r\n                          \r\n                        });\r\n\r\n                     }\r\n\r\n\r\n\r\n\r\n    render(){\r\n                       //iterate over books to create a table row\r\n                       let details = this.state.enrolled.map(item => {\r\n\r\n                        return(\r\n                            <tr>\r\n                                <td>{item.course_id}</td>\r\n                                <td>{item.username}</td>\r\n                               \r\n                                     <td><button class=\"btn btn-danger\" onClick={this.remove} value={item.username}>Remove</button></td>\r\n                                \r\n                               \r\n                            </tr>\r\n                        )\r\n                    })\r\n\r\n\r\n        const {course_id} = this.props.match.params\r\n        \r\n           //redirect based on successful login\r\n           let redirectVar = null;\r\n           let no_access = null;\r\n           if(!cookie.load('username')){\r\n               redirectVar = <Redirect to= \"/login\"/>\r\n           }\r\n           if(cookie.load('user_type')==\"student\"){\r\n            no_access=<Redirect to= \"/dashboard\"/>\r\n        }\r\n        return(\r\n            \r\n        <div>\r\n                {redirectVar}\r\n                {no_access}\r\n                <Navbar/>\r\n\r\n            <div class=\"side_navigation\">\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-2 col-sm-2\">\r\n                       \r\n                    <Sidenavbar/>\r\n                    </div>\r\n                    <div class=\"col-md-10 col-sm-10\">\r\n\r\n                        <h3>List of students enrolled for {course_id}</h3>\r\n                    \r\n                        <table class=\"table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Course ID</th>\r\n                                    <th>Student Name</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {/*Display the Tbale row based on data recieved*/}\r\n                                {details}\r\n                            </tbody>\r\n                        </table>\r\n\r\n\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n         </div>\r\n        )\r\n\r\n}\r\n}"]},"metadata":{},"sourceType":"module"}