{"ast":null,"code":"import _classCallCheck from \"/Users/amitkamboj/Desktop/canvas/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/amitkamboj/Desktop/canvas/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/amitkamboj/Desktop/canvas/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/amitkamboj/Desktop/canvas/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/amitkamboj/Desktop/canvas/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/amitkamboj/Desktop/canvas/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/amitkamboj/Desktop/canvas/src/Show_waitlist.js\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport cookie from 'react-cookies';\nimport { Redirect } from 'react-router';\nimport { Navbar } from './Navbar';\nimport { Link } from 'react-router-dom';\nimport { FaUser } from 'react-icons/fa';\nimport './index.css';\nimport { Sidenavbar } from './Sidenavbar';\nimport axios from 'axios';\nexport var Show_waitlist =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Show_waitlist, _Component);\n\n  function Show_waitlist(props) {\n    var _this;\n\n    _classCallCheck(this, Show_waitlist);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Show_waitlist).call(this, props));\n    _this.state = {\n      waitlist: [],\n      authFlag: false\n    };\n    _this.applyCode = _this.applyCode.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Show_waitlist, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var _this2 = this;\n\n      if (this.state.authFlag == true) {\n        axios.get('http://localhost:3001/show_waitlist').then(function (response) {\n          //update the state with the response data\n          _this2.setState({\n            waitlist: response.data,\n            authFlag: false\n          });\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      axios.get('http://localhost:3001/show_waitlist').then(function (response) {\n        //update the state with the response data\n        _this3.setState({\n          waitlist: _this3.state.waitlist.concat(response.data)\n        });\n      });\n    }\n  }, {\n    key: \"applyCode\",\n    value: function applyCode(e) {\n      var _this4 = this;\n\n      var data = {\n        \"course_id\": e.target.value\n      };\n      axios.post('http://localhost:3001/apply_code/', data).then(function (response) {\n        if (response.status === 200) {\n          alert(response.data);\n\n          _this4.setState({\n            authFlag: true\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      //iterate over books to create a table row\n      var details = this.state.waitlist.map(function (item) {\n        if (item.permission_code == 0) {\n          var button_type = React.createElement(\"button\", {\n            class: \"btn btn-warning\",\n            disabled: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82\n            },\n            __self: this\n          }, \"Waitlist\");\n        } else {\n          var button_type = React.createElement(\"button\", {\n            class: \"btn btn-success\",\n            value: item.course_id,\n            onClick: _this5.applyCode,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84\n            },\n            __self: this\n          }, \"Apply Code: \", item.permission_code);\n        }\n\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, item.course_id), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, button_type));\n      }); //redirect based on successful login\n      //    let redirectVar = null;\n      //    if(!cookie.load('username')){\n      //        redirectVar = <Redirect to= \"/login\"/>\n      //    }\n      //    if(cookie.load('user_type')){\n      // }\n\n      return React.createElement(\"table\", {\n        class: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Course ID\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Action\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, details));\n    }\n  }]);\n\n  return Show_waitlist;\n}(Component);","map":{"version":3,"sources":["/Users/amitkamboj/Desktop/canvas/src/Show_waitlist.js"],"names":["React","Component","cookie","Redirect","Navbar","Link","FaUser","Sidenavbar","axios","Show_waitlist","props","state","waitlist","authFlag","applyCode","bind","get","then","response","setState","data","concat","e","target","value","post","status","alert","details","map","item","permission_code","button_type","course_id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport cookie from 'react-cookies';\r\nimport {Redirect} from 'react-router';\r\nimport {Navbar} from './Navbar';\r\nimport {Link} from 'react-router-dom';\r\nimport { FaUser } from 'react-icons/fa';\r\nimport './index.css';\r\nimport {Sidenavbar} from './Sidenavbar';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nexport class Show_waitlist extends Component{\r\n\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {  \r\n            waitlist : [],\r\n            authFlag : false\r\n        }\r\nthis.applyCode=this.applyCode.bind(this);\r\n    }  \r\n\r\n    componentDidUpdate() {\r\n\r\n        if (this.state.authFlag==true) {\r\n            axios.get('http://localhost:3001/show_waitlist')\r\n        .then((response) => {\r\n        //update the state with the response data\r\n        this.setState({\r\n            waitlist :response.data ,\r\n            authFlag:false\r\n           \r\n        });\r\n    });\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n    \r\n\r\n        axios.get('http://localhost:3001/show_waitlist')\r\n                .then((response) => {\r\n                //update the state with the response data\r\n                this.setState({\r\n                    waitlist : this.state.waitlist.concat(response.data) \r\n                   \r\n                });\r\n            });\r\n    }\r\n\r\n\r\napplyCode(e){\r\n\r\n    var data = \r\n    {\r\n        \"course_id\": e.target.value,\r\n    }\r\n    axios.post('http://localhost:3001/apply_code/',data)\r\n        .then(response =>{\r\n            if(response.status === 200){\r\n                alert(response.data);\r\n                this.setState({\r\n                    authFlag:true\r\n                   \r\n                });\r\n            }\r\n        });\r\n}\r\n\r\n\r\n    render(){\r\n                       //iterate over books to create a table row\r\n                       let details = this.state.waitlist.map(item => {\r\n                 if(item.permission_code==0)\r\n                 {\r\n                    var button_type=<button class=\"btn btn-warning\" disabled>Waitlist</button>;\r\n                 }else{\r\n                    var button_type=<button class=\"btn btn-success\" value={item.course_id} onClick={this.applyCode}>Apply Code: {item.permission_code}</button>;\r\n                 }\r\n                        return(\r\n                            <tr>\r\n                                <td>{item.course_id}</td>\r\n                               \r\n                                     <td>{button_type}</td>\r\n                                \r\n                               \r\n                            </tr>\r\n                        )\r\n                    })\r\n\r\n\r\n     \r\n        \r\n           //redirect based on successful login\r\n        //    let redirectVar = null;\r\n        //    if(!cookie.load('username')){\r\n        //        redirectVar = <Redirect to= \"/login\"/>\r\n        //    }\r\n        //    if(cookie.load('user_type')){\r\n\r\n        // }\r\n        return(\r\n            \r\n   \r\n                    \r\n                        <table class=\"table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Course ID</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {/*Display the Tbale row based on data recieved*/}\r\n                                {details}\r\n                            </tbody>\r\n                        </table>\r\n\r\n\r\n        )\r\n\r\n}\r\n}"]},"metadata":{},"sourceType":"module"}